<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">
	<resultMap type="userDTO" id="selectUserMap">
		<id column="id" property="id"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="age" property="age"/>
		<result column="gender" property="gender"/>
		<result column="register_date" property="registerDate"/>
		<result column="update_date" property="updateDate"/>
		<result column="file_name" property="fileName"/>
		<result column="state" property="state"/>
	</resultMap>
	
	<resultMap type="userDTO" id="selectReplyUserMap">
		<id column="ru_id" property="id"/>
		<result column="ru_name" property="name"/>
		<result column="ru_file_name" property="fileName"/>
	</resultMap>

	<resultMap type="boardPictureDTO" id="selectBoardPictureMap">
		<id column="board_picture_no" property="boardPictureNo"/>
		<result column="bp_file_name" property="fileName"/>
		<result column="bp_board_no" property="boardNo"/>
	</resultMap>
	
	<resultMap type="gradeDTO" id="selectGradeMap">
		<id column="grade_no" property="gradeNo"/>
		<result column="grade" property="grade"/>
		<result column="id" property="id"/>
		<result column="board_no" property="boardNo"/>
	</resultMap>

	<resultMap type="replyDTO" id="selectReplyMap">
		<id column="reply_no" property="replyNo"/>
		<result column="r_content" property="content"/>
		<result column="r_writer_date" property="writerDate"/>
		<result column="r_writer" property="writer"/>
		<result column="r_board_no" property="boardNo"/>
		<association property="user" javaType="userDTO" resultMap="selectReplyUserMap" />
	</resultMap>

	<resultMap type="boardDTO" id="selectBoardMap">
		<id column="board_no" property="boardNo"/>
		<result column="content" property="content"/>
		<result column="write_date" property="writeDate"/>
		<result column="trip_date" property="tripDate"/>
		<result column="location" property="location"/>
		<result column="location_lat" property="locationLat"/>
		<result column="location_lng" property="locationLng"/>
		<result column="writer" property="writer"/>
		<result column="state" property="state"/>
		<result column="like_count" property="likeCount"/>
		<result column="schedule_no" property="scheduleNo"/>
		<association property="user" javaType="userDTO" resultMap="selectUserMap" />
		<collection property="replys" javaType="java.util.ArrayList" resultMap="selectReplyMap" />
		<collection property="boardPictures" javaType="java.util.ArrayList" resultMap="selectBoardPictureMap" />
	</resultMap>
	
	<select id="selectBoard" parameterType="map" resultMap="selectBoardMap">
		select b.board_no,b.content,b.write_date,b.trip_date,b.location,b.location_lat,b.location_lng,b.writer,b.state,b.schedule_no
		,u.id,u.name,u.file_name,bp.board_Picture_no,bp.file_name bp_file_name,bp.board_no bp_board_no,r.reply_no,r.writer r_writer,r.content r_content
		,r.writer_date r_writer_date,r.board_no r_board_no,ru.id ru_id, ru.name ru_name, ru.file_name ru_file_name, count(g.id) like_count
		from board_table b join user_table u on b.writer=u.id 
		left join board_picture_table bp on b.board_no=bp.board_no
		left join grade_table g on b.board_no=g.board_no
		left join reply_table r join user_table ru on r.writer = ru.id on r.board_no = b.board_no
		where (b.writer=#{userId})
		<if test="friendList.size()!=0">
		 or ((b.state='1' or b.state='0') and b.writer in 
		<foreach collection="friendList" item="friend" open="(" separator=","
			close=")">
			#{friend}
		</foreach>
		)
		</if>
		<if test="groupList.size()!=0">  or (b.state in 
			<foreach collection="groupList" item="group" open="(" separator=","
			close=")">
			#{group}
			</foreach>
		)
		</if>
		group by b.board_no,b.content,b.write_date,b.trip_date,b.location,b.location_lat,b.location_lng,b.writer,b.state,b.schedule_no
		,u.id,u.name,u.file_name,bp.board_Picture_no,bp.file_name,bp.board_no,r.reply_no,r.writer,r.content,r.writer_date,r.board_no,ru.id,ru.name, ru.file_name
		order by b.write_date desc,r.writer_date desc
	</select>
	
	<insert id="insertBoard" parameterType="boardDTO">
		insert into board_table(board_no,content,write_date,trip_date,location,
		location_lat,location_lng,writer,state)
		values(board_sequence.nextval,#{content},sysdate,#{tripDate,jdbcType=VARCHAR},
		#{location,jdbcType=VARCHAR},#{locationLat},#{locationLng},#{writer},#{state})
	</insert>
	
	<select id="selectBoardById" parameterType="String" resultType="int">
		select board_no from board_table where writer=#{value} order by write_date desc
 	</select>
 	
 	<insert id="insertScheduleBoard" parameterType="boardDTO">
		insert into board_table(board_no,content,write_date,trip_date,location,
		location_lat,location_lng,writer,state,schedule_no)
		values(board_sequence.nextval,#{content},sysdate,to_date(#{tripDate,jdbcType=VARCHAR},'MM/DD/YYYY HH:MI PM','nls_date_language = ENGLISH'),
		#{location,jdbcType=VARCHAR},#{locationLat},#{locationLng},#{writer},#{state},#{scheduleNo})
 	</insert>
 	<select id="selectDetailBiography" parameterType="map" resultMap="selectBoardMap">
 	select b.board_no,b.content,b.write_date,b.trip_date,b.location,b.location_lat,b.location_lng,b.writer,b.state,b.schedule_no
		,u.id,u.name,u.file_name,bp.board_Picture_no,bp.file_name bp_file_name,bp.board_no bp_board_no,r.reply_no,r.writer r_writer,r.content r_content
		,r.writer_date r_writer_date,r.board_no r_board_no,ru.id ru_id, ru.name ru_name, ru.file_name ru_file_name 
		from board_table b join user_table u on b.writer=u.id
		left join board_picture_table bp on b.board_no=bp.board_no
		left join reply_table r join user_table ru on r.writer = ru.id on r.board_no = b.board_no
		where b.schedule_no=#{scheduleNo} and ((b.writer=#{userId})
		<if test="friendList.size()!=0">
		 or ((b.state='1' or b.state='0') and b.writer in 
		<foreach collection="friendList" item="friend" open="(" separator=","
			close=")">
			#{friend}
		</foreach>
		)
		</if>
		<if test="groupList.size()!=0">  or (b.state in 
			<foreach collection="groupList" item="group" open="(" separator=","
			close=")">
			#{group}
			</foreach>
		)
		</if>
		)
		order by b.trip_date
 	</select>
 	<select id="selectBoardByAdmin" resultMap="selectBoardMap">
 		select b.board_no,b.content,b.write_date,b.trip_date,b.location,b.location_lat,b.location_lng,b.writer,b.state,b.schedule_no
		,u.id,u.name,u.file_name,bp.board_Picture_no,bp.file_name bp_file_name,bp.board_no bp_board_no,r.reply_no,r.writer r_writer,r.content r_content
		,r.writer_date r_writer_date,r.board_no r_board_no,ru.id ru_id, ru.name ru_name, ru.file_name ru_file_name 
		from board_table b join user_table u on b.writer=u.id
		left join board_picture_table bp on b.board_no=bp.board_no
		left join reply_table r join user_table ru on r.writer = ru.id on r.board_no = b.board_no
 	</select>
 	
 	<select id="selectNotFriendBoard" parameterType="map" resultMap="selectBoardMap">
 		select b.board_no,b.content,b.write_date,b.trip_date,b.location,b.location_lat,b.location_lng,b.writer,b.state,b.schedule_no
		,u.id,u.name,u.file_name,bp.board_Picture_no,bp.file_name bp_file_name,bp.board_no bp_board_no,r.reply_no,r.writer r_writer,r.content r_content
		,r.writer_date r_writer_date,r.board_no r_board_no,ru.id ru_id, ru.name ru_name, ru.file_name ru_file_name 
		from board_table b join user_table u on b.writer=u.id
		left join board_picture_table bp on b.board_no=bp.board_no
		left join reply_table r join user_table ru on r.writer = ru.id on r.board_no = b.board_no
		where (b.writer=#{friendId} and b.state='0')
		<if test="groupList.size()!=0">  or (b.state in 
			<foreach collection="groupList" item="group" open="(" separator=","
			close=")">
			#{group}
			</foreach>
		)
		</if>
		order by b.write_date desc,r.writer_date desc
 	</select>
 	
 	<select id="selectFriendBoard" parameterType="map" resultMap="selectBoardMap">
 		select b.board_no,b.content,b.write_date,b.trip_date,b.location,b.location_lat,b.location_lng,b.writer,b.state,b.schedule_no
		,u.id,u.name,u.file_name,bp.board_Picture_no,bp.file_name bp_file_name,bp.board_no bp_board_no,r.reply_no,r.writer r_writer,r.content r_content
		,r.writer_date r_writer_date,r.board_no r_board_no,ru.id ru_id, ru.name ru_name, ru.file_name ru_file_name 
		from board_table b join user_table u on b.writer=u.id
		left join board_picture_table bp on b.board_no=bp.board_no
		left join reply_table r join user_table ru on r.writer = ru.id on r.board_no = b.board_no
		where (b.writer=#{friendId} and (b.state='0' or b.state='1'))
		<if test="groupList.size()!=0">  or (b.state in 
			<foreach collection="groupList" item="group" open="(" separator=","
			close=")">
			#{group}
			</foreach>
		)
		</if>
		order by b.write_date desc,r.writer_date desc
 	</select>
</mapper>